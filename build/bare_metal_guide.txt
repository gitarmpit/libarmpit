https://github.com/cpq/bare-metal-programming-guide


// Startup code
__attribute__((naked, noreturn)) void _reset(void) {
  for (;;) (void) 0;  // Infinite loop
}

extern void _estack(void);  // Defined in link.ld

// 16 standard and 91 STM32-specific handlers
__attribute__((section(".vectors"))) void (*const tab[16 + 91])(void) = {
  _estack, _reset
};


#define PIN(bank, num) ((((bank) - 'A') << 8) | (num))
#define PINNO(pin) (pin & 255)
#define PINBANK(pin) (pin >> 8)

uint16_t pin1 = PIN('A', 3);    // A3   - GPIOA pin 3
uint16_t pin2 = PIN('G', 11);   // G11  - GPIOG pin 11   

gpio_set_mode(pin1, GPIO_MODE_OUTPUT);


arm-none-eabi-gcc -mcpu=cortex-m4 main.c -c

arm-none-eabi-objdump -h main.o
...
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000002  00000000  00000000  00000034  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000036  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000036  2**0
                  ALLOC
  3 .vectors      000001ac  00000000  00000000  00000038  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, DATA


https://blog.thea.codes/the-most-thoroughly-commented-linker-script/


https://sourceware.org/binutils/docs/ld/Simple-Commands.html




GCC generates three "flavors" of sections in object files:

.{section}: the basic section.
.{section}.*: sections generated by -ffunction-sections and -fdata-sections so that each function/data has a unique section.
.gnu.linkonce.{type}.*: sections generated by GCC so the linker can remove duplicates. Seems to be related to Vague Linking.


KEEP:  avoid deleting unreferenced symbols (special symbols)  that would otherwise be deleted 
 


  .isr_vector :
  {
    . = ALIGN(4);
    KEEP(*(.isr_vector)) /* Startup code */
    . = ALIGN(4);
  } >FLASH


