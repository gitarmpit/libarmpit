Cube/Drivers: 

CMSIS/Core/Include: just headers 
- cmsis_compiler.h cmsis_gcc.h cmsis_version.h core_cm4.h mpu_armv7.h 

  core_cm4.h: included by parts: stm32f401xc.h etc. 

              main stuff:   typedef struct NVIC_Type { ..., ISER[8]  etc
                            NVIC_ClearPendingIRQ(IRQn) __NVIC_ClearPendingIRQ

                            called from: stm32f4xx_hal_cortex.c
                                         HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn) 

                                          void HAL_SYSTICK_IRQHandler(void)  => calls:
                                          __weak void HAL_SYSTICK_Callback(void)

============================================================================================         
CMSIS/Device/ST/STM32F4xx/Include:
- "stm32f4xx.h" => includes "stm32f401xc.h" etc
  also:  
  #if defined (USE_HAL_DRIVER)
    #include "stm32f4xx_hal.h"
  #endif /* USE_HAL_DRIVER */

- stm32f401xc.h etc =>  core_cm4.h, system_stm32f4xx.h
  defines part specific interrupts, ADC_TypeDef etc, Peripheral address offsets, register offsets/bitmasks, some macros 
 
- system_stm32f4xx.h included from stm32f401xc.h etc
                     extern SystemCoreClock
                     extern void SystemInit (SystemInit is called from startup script.s) 
                     THese externs are defined in system_stm32f4xx.c which is in project code

CMSIS/Device/ST/STM32F4xx/Souce/Templates:
- system_stm32f4xx.c (copied to projects) => stm32f4xx.h
- also contain startup scripts for different parts and different platforms 

=============================================================================================
projects include: stm32f4xx.h  => stm32f401xc.h etc. based on #defs => core_cm4.h , system_stm32f4xx.h 
============================================================================================
LL
stm32f4xx_ll_adc.h => #include "stm32f4xx.h"  (for ADC_TypeDef with registers in stm32f401xc.h for specific part)
register offset macros 
also:
#define TEMPSENSOR_CAL1_ADDR ((uint16_t*) (0x1FFF7A2CU))
(used by internal macros in that file and not found anywhere else) 

WRITE_REG, SET_BIT, CLEAR_BIT, READ_BIT


LL_ADC_CommonInitTypeDef
LL_ADC_InitTypeDef;
LL_ADC_REG_InitTypeDef, LL_ADC_INJ_InitTypeDef

#define LL_ADC_FLAG_STRT ADC_SR_STRT   etc

static LL_ADC_IsEnabled...(ADC_TypeDef *ADCx) { return (READ_BIT(ADCx->CR1, LL_ADC_IT_AWD1) == (LL_ADC_IT_AWD1)); }
most are not used, LL_ADC_IsEnabled is called from: LL_ADC_Init in  stm32f4xx_ll_adc.c

extern:
LL_ADC_Init  LL_ADC_REG_Init  etc  (all inits) 


HAL doesn't use LL except for some headers in SDRAM and a few others 

LL includes stm32f4xx.h for register definitions
 

