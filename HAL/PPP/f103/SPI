// Configure 

LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOB);


/* Configure SCK Pin connected to pin 10 of CN7 connector */
LL_GPIO_SetPinMode(GPIOB, LL_GPIO_PIN_13, LL_GPIO_MODE_ALTERNATE);
LL_GPIO_SetPinSpeed(GPIOB, LL_GPIO_PIN_13, LL_GPIO_SPEED_FREQ_LOW);
LL_GPIO_SetPinPull(GPIOB, LL_GPIO_PIN_13, LL_GPIO_PULL_DOWN);

/* Configure MISO Pin connected to pin 12 of CN7 connector */
LL_GPIO_SetPinMode(GPIOB, LL_GPIO_PIN_14, LL_GPIO_MODE_ALTERNATE);
LL_GPIO_SetPinSpeed(GPIOB, LL_GPIO_PIN_14, LL_GPIO_SPEED_FREQ_LOW);
LL_GPIO_SetPinPull(GPIOB, LL_GPIO_PIN_14, LL_GPIO_PULL_DOWN);

/* Configure MOSI Pin connected to pin 14 of CN7 connector */
LL_GPIO_SetPinMode(GPIOB, LL_GPIO_PIN_15, LL_GPIO_MODE_ALTERNATE);
LL_GPIO_SetPinSpeed(GPIOB, LL_GPIO_PIN_15, LL_GPIO_SPEED_FREQ_LOW);
LL_GPIO_SetPinPull(GPIOB, LL_GPIO_PIN_15, LL_GPIO_PULL_DOWN);


NVIC_SetPriority(SPI2_IRQn, 0);
NVIC_EnableIRQ(SPI2_IRQn);

// Enable SPI clock
LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_SPI2);

/* Configure SPI2 communication */
LL_SPI_SetBaudRatePrescaler(SPI2, LL_SPI_BAUDRATEPRESCALER_DIV256);
LL_SPI_SetTransferDirection(SPI2,LL_SPI_FULL_DUPLEX); // or LL_SPI_HALF_DUPLEX_TX
LL_SPI_SetClockPhase(SPI2, LL_SPI_PHASE_2EDGE);
LL_SPI_SetClockPolarity(SPI2, LL_SPI_POLARITY_HIGH);
LL_SPI_SetTransferBitOrder(SPI2, LL_SPI_MSB_FIRST);
LL_SPI_SetDataWidth(SPI2, LL_SPI_DATAWIDTH_8BIT);
LL_SPI_SetNSSMode(SPI2, LL_SPI_NSS_SOFT);
#ifdef MASTER_BOARD
  LL_SPI_SetMode(SPI2, LL_SPI_MODE_MASTER);
#else
  LL_SPI_SetMode(SPI2, LL_SPI_MODE_SLAVE);
#endif /* MASTER_BOARD */
  

// Interrupts

LL_SPI_EnableIT_RXNE(SPI2);
LL_SPI_EnableIT_TXE(SPI2);
LL_SPI_EnableIT_ERR(SPI2);


// Activate
LL_SPI_Enable(SPI2);

// Run
byte = LL_SPI_ReceiveData8(SPI2);
LL_SPI_TransmitData8(SPI2, byte);


void SPI2_IRQHandler(void)
{
  if(LL_SPI_IsActiveFlag_RXNE(SPI2))
  {
    SPI2_Rx_Callback();
  }
  else if(LL_SPI_IsActiveFlag_TXE(SPI2))
  {
    SPI2_Tx_Callback();
  }
  /* Check STOP flag value in ISR register */
  else if(LL_SPI_IsActiveFlag_OVR(SPI2))
  {
    /* Call Error function */
    SPI2_TransferError_Callback();
  }
}
